Queue set limit_ 1000






Antenna/OmniAntenna set X_ 0
Antenna/OmniAntenna set Y_ 0
Antenna/OmniAntenna set Z_ 1.5
Antenna/OmniAntenna set Gt_ 1.0
Antenna/OmniAntenna set Gr_ 1.0
set nominal_range 250.0
set configured_range -1.0
set configured_raw_bitrate -1.0

# Define options
set val(chan) Channel/WirelessChannel ;# channel type
set val(prop) Propagation/TwoRayGround ;# radio-propagation model
set val(netif) Phy/WirelessPhy ;# network interface type
set val(mac) Mac/802_11 ;# MAC type
set val(ifq) Queue/DropTail/PriQueue ;# interface queue type
set val(ll) LL ;# link layer type

set val(ant) Antenna/OmniAntenna ;# antenna model
set val(ifqlen) 50 ;# max packet in ifq




set val(nn) 40 ;# number of mobilenodes
set val(rp) AODV ;# routing protocol


if { $val(rp) == "DSR" } {
    set val(ifq) CMUPriQueue
} else {
    set val(ifq) Queue/DropTail/PriQueue
}



set val(x) 1000 ;# X dimension of topography
set val(y) 1000 ;# Y dimension of topography
set val(sc)	"/home/mavb128/ns-allinone-2.35/ns-2.35/tcl/mobility/scene/40Nx1000Wx1000H/40Nx1000Wx1000H32SR/scene40nodesaodv1000.tcl"
set val(stop) 1000 ;# time of simulation end









set ns_ [new Simulator]
set tracefd [open 40nodsr1000.tr w]
set namtrace [open 40nodsr1000.nam w]


$ns_ trace-all $tracefd
$ns_ namtrace-all-wireless $namtrace $val(x) $val(y)

$ns_ use-newtrace

# set up topography object
set topo [new Topography]

$topo load_flatgrid $val(x) $val(y)

set god_ [create-god $val(nn)]




# configure the nodes
$ns_ node-config -adhocRouting $val(rp) \
-llType $val(ll) \
-macType $val(mac) \
-ifqType $val(ifq) \
-ifqLen $val(ifqlen) \
-antType $val(ant) \
-propType $val(prop) \
-phyType $val(netif) \
-channelType $val(chan) \
-topoInstance $topo \
-agentTrace ON \
-routerTrace ON \
-macTrace OFF \
-movementTrace ON

for {set i 0} {$i < $val(nn) } { incr i } {
set node_($i) [$ns_ node]
$node_($i) random-motion 0
#$node_($i) radius 1			;# radius of each node....
}

# Define traffic model

puts "Loading scenario file..."
source $val(sc)





# Set a TCP connection between n(3) and n(7)
set tcp [new Agent/TCP/Newreno]
$tcp set class_ 1
set sink [new Agent/TCPSink]
$ns_ attach-agent $node_(3) $tcp
$ns_ attach-agent $node_(7) $sink
$ns_ connect $tcp $sink
set ftp [new Application/FTP]
$ftp attach-agent $tcp
$ns_ at 0.0 "$ftp start"





#defining heads
$ns_ at 0.0 "$node_(0) label CH"
$ns_ at 0.0 "$node_(1) label Source"
#$ns_ at 0.0 "$node_(2) label N2"







#Color change while moving from one group to another
#$ns at 73.0 "$n(2) delete-mark N2"
#$ns at 73.0 "$n(2) add-mark N2 pink circle"
#$ns at 124.0 "$n(11) delete-mark N11"
#$ns at 124.0 "$n(11) add-mark N11 purple circle"
#$ns at 103.0 "$n(5) delete-mark N5"
#$ns at 103.0 "$n(5) add-mark N5 white circle"
#$ns at 87.0 "$n(19) delete-mark N26"
#$ns at 87.0 "$n(17) add-mark N26 yellow circle"
#$ns at 92.0 "$n(14) delete-mark N14"
#$ns at 92.0 "$n(14) add-mark N14 green circle"

# Define node initial position in nam
for {set i 0} {$i < $val(nn)} { incr i } {
# 20 defines the node size for nam
$ns_ initial_node_pos $node_($i) 50
}

# Telling nodes when the simulation ends
for {set i 0} {$i < $val(nn) } { incr i } {
$ns_ at $val(stop) "$node_($i) reset";
}

# ending nam and the simulation
$ns_ at $val(stop) "$ns_ nam-end-wireless $val(stop)"
#$ns_ at $val(stop) "stop"
$ns_ at 1000.01 "puts \"end simulation\" ; $ns_ halt"

proc stop {} {
global ns_ tracefd namtrace
$ns_ flush-trace
close $tracefd
close $namtrace
exec nam 40nodsr1000.nam &
}

puts $tracefd "M 0.0 nn $val(nn) x $val(x) y $val(y) rp $val(rp)"

$ns_ run 
